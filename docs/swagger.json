{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Students app",
    "license": {
      "name": "Apache 2.0",
      "url": "<http://www.apache.org/licenses/LICENSE-2.0.html>"
    },
    "description": "This is a documentation of students app\n"
  },
  "servers": [
    {
      "url": "<http://localhost:3000>"
    },
    {
      "url": "<https://example.com/api/v1>"
    }
  ],
  "tags": [
    {
      "name": "Students",
      "description": "Operation about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "post": {
          "$ref": "../swagger/paths/contacts/post.yaml"
        },
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of users with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name"
            },
            "description": "All contact's fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          },
          {
            "in": "query",
            "name": "contactType",
            "schema": {
              "type": "string",
              "example": "work"
            }
          },
          {
            "in": "query",
            "name": "isFavourite",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "/contacts/{contactId}": {
        "get": {
          "$ref": "../swagger/paths/contacts/{contactId}/get.yaml"
        },
        "patch": {
          "$ref": "../swagger/paths/contacts/{contactId}/patch.yaml"
        },
        "delete": {
          "$ref": "../swagger/paths/contacts/{contactId}/delete.yaml"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "updatedAt",
          "createdAt",
          "userId",
          "photo"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact's name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number",
            "example": "+380000000001"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address",
            "example": "john.doe@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Contact favourite",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When was created",
            "example": "2024-06-06T17:48:14.102Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When was updated",
            "example": "2024-06-06T17:48:14.102Z"
          },
          "contactType": {
            "type": "string",
            "description": "Contact's type",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "work"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user who created the contact",
            "example": "60d21b4667d0d8992e610c85"
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "description": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}